#Build script for Linux
#Note: 
# Every object in a build needs a specific location for ninja to know where to find it, it cannot be found 
# while the rule command execution because ninja wants it like that
#Note:
# Moved ninja build files to build dir because Ninja does not have any option to remove undesired object files
# so I did have to make a shell file to solve this problem

compiler = clang
flags = -Wall -Wextra -Werror -Wno-undefined-inline -O3
build_dir = build/result/
header_dir = include/internal/
src_dir = src/
lib_name = libcargs

object_list = ${build_dir}anon_arg_list.obj ${build_dir}bit_vec_ops.obj ${build_dir}error_str.obj ${build_dir}init_funcs.obj $
    ${build_dir}main_funcs.obj ${build_dir}shared_data.obj ${build_dir}utils.obj

source_list = ${src_dir}anon_arg_list.c ${src_dir}bit_vec_ops.c ${src_dir}error_str.c ${src_dir}init_funcs.c $
    ${src_dir}main_funcs.c ${src_dir}shared_data.c ${src_dir}utils.c


# Rules
rule compile_object
    command = $compiler $flags -I $header_dir -c $in -o $out

rule create_lib
    command = ar rc $out $object_list

rule create_dll
    command = $compiler $flags -I $header_dir -fPIC -shared -o $out $source_list

rule clean_objects
    command = del $out


#Object files
build ${build_dir}anon_arg_list.obj: compile_object ${src_dir}anon_arg_list.c
build ${build_dir}bit_vec_ops.obj: compile_object ${src_dir}bit_vec_ops.c
build ${build_dir}error_str.obj: compile_object ${src_dir}error_str.c
build ${build_dir}init_funcs.obj: compile_object ${src_dir}init_funcs.c
build ${build_dir}main_funcs.obj: compile_object ${src_dir}main_funcs.c
build ${build_dir}shared_data.obj: compile_object ${src_dir}shared_data.c
build ${build_dir}utils.obj: compile_object ${src_dir}utils.c

#Static library
build ${build_dir}$lib_name.a: create_lib | ${build_dir}anon_arg_list.obj ${build_dir}bit_vec_ops.obj ${build_dir}error_str.obj ${build_dir}init_funcs.obj $
    ${build_dir}main_funcs.obj ${build_dir}shared_data.obj ${build_dir}utils.obj

#Dynamic link library
build ${build_dir}$lib_name.so: create_dll
